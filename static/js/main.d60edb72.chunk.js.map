{"version":3,"sources":["File/FileUploader.tsx","Table/Table.tsx","File/FileList.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["FileUploader","_React$PureComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","currentFileName","reader","FileReader","onloadend","handleFileRead","bind","assertThisInitialized","inherits","createClass","key","value","ev","data","result","trim","split","filter","d","length","console","log","parseData","map","JSON","parse","_unused","keys","onAddFile","name","id","e","file","currentTarget","files","test","readAsText","alert","react","type","onChange","onReceiveFile","React","TableHead","styled","thead","_templateObject","DetailTable","table","_templateObject2","FileNameRow","tr","_templateObject3","TableBody","tbody","_templateObject4","MainTable","_templateObject5","Table","apply","arguments","displayColumn","children","col","renderObjectTable","object","_this2","_this3","renderFileNameRow","renderFileDataRow","renderHeaderRow","renderRows","FileList","_React$Component","onClick","onFileRemove","x","renderFileRow","TableContainer","div","App_templateObject","Container","App_templateObject2","Header","header","App_templateObject3","App","defaultFiles","level","ts","caller","msg","count","test2","test3","undefined","question","qid","index","trainingPhrase","matched","intent","retry","state","currentID","colsAvaliable","colsSelected","onFileReceive","f","reduce","concat","colSet","Set","y","cols","forEach","c","push","label","objectSpread","setState","avaliableCols","toConsumableArray","newFiles","newAvaCols","newSelCols","findIndex","react_default","a","createElement","FileUploader_FileUploader","react_select_esm","options","onSelectColsChange","isSearchable","isMulti","FileList_FileList","onClearAll","Table_Table","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d60edb72.chunk.js","sourcesContent":["import * as React from 'react';\nimport { DataTypes } from '../dataTypes';\n\ninterface Props {\n    onAddFile: (x: DataTypes.File) => void;\n}\n\nexport class FileUploader extends React.PureComponent<Props> {\n\n    private currentFileName = '';\n    private reader: FileReader;\n\n    constructor(props: Props) {\n        super(props)\n        this.reader = new FileReader();\n        this.reader.onloadend = this.handleFileRead.bind(this);\n    }\n\n    private handleFileRead(ev: ProgressEvent) {\n        const content = this.reader.result as string;\n        const data = content.trim().split('\\n').filter((d) => d.trim().length > 0);\n        console.log('Input Data :', data);\n        const parseData = data.map((d) => {\n            try {\n                const parseD = JSON.parse(d);\n                return parseD;\n            } catch {\n                return {};\n            }\n        }).filter((d) => Object.keys(d).length > 0);\n        this.props.onAddFile({ name: this.currentFileName, data: parseData, id: 0 });\n    }\n\n    private onReceiveFile(e: React.FormEvent<HTMLInputElement>) {\n        let file = e.currentTarget.files && e.currentTarget.files[0];\n        if (file) {\n            const fileExtensionRegex = /^.*\\.(json|jsonl)$/i;\n            if (file && fileExtensionRegex.test(file.name)) {\n                this.reader.readAsText(file as Blob);\n                this.currentFileName = file.name;\n            } else {\n                alert('File type not support, Please use JSON.');\n            }\n        }\n    }\n\n    render() {\n        return <input type=\"file\" onChange={this.onReceiveFile.bind(this)} />\n    }\n}","import * as React from 'react';\nimport { DataTypes } from \"../dataTypes\";\nimport styled from \"styled-components\";\n\ninterface Props {\n    data: DataTypes.File[];\n    displayColumn: string[];\n}\n\nconst TableHead = styled.thead`\n        \n    z-index: 2;\n    th {\n        position: sticky;\n        position: -webkit-sticky;\n        background-color: #101010;\n        text-transform: uppercase;\n        color: #00ad5f;\n        font-size: 15px;\n        font-weight: 500;\n        padding: 20px 10px;\n        top: 0;\n    }\n`;\n\nconst DetailTable = styled.table`\nwidth: 100%;\nth {\n    padding: 5px;\n    text-transform: uppercase;\n    font-weight: 500;\n}\ntd {\n    vertical-align: top;\n}\n`;\n\nconst FileNameRow = styled.tr`\nth{\ncolumn-span: all;\n}\n`;\n\nconst TableBody = styled.tbody`\ncolor: #b1b1b1;\nfont-size: 15px;\ntd {\n    padding: 10px;\n    vertical-align: top;\n}\ntr:nth-child(odd){\n    background-color: #252525;\n}\ntr:nth-child(even){\n    background-color: #202020;\n}\n`;\n\nconst MainTable = styled.table`\nwidth: 100%;\nborder-collapse: collapse;\ntext-align: left;\n`;\n\nexport class Table extends React.PureComponent<Props> {\n\n    private renderHeaderRow() {\n        return (\n            <TableHead>\n                {this.props.displayColumn.length === 0 ?\n                    <th children={\"Please select display column\"} /> :\n                    this.props.displayColumn.map((col) => (<th children={col} />))\n                }\n            </TableHead>\n        );\n    }\n\n    private renderFileNameRow(name: string) {\n        return <FileNameRow><th>{name}</th></FileNameRow>;\n    }\n\n    private renderFileDataRow(data: any) {\n        return (\n            <tr>\n                {this.props.displayColumn.map((key) => {\n                    const col = data[key];\n                    if (typeof (col) === 'object') {\n                        switch (col) {\n                            case null:\n                                return <td>null</td>\n                            default:\n                                return <td>{this.renderObjectTable(data[key])}</td>\n                        }\n                    };\n                    return <td>{data[key]}</td>\n                })}\n            </tr>\n        )\n    }\n\n    renderObjectTable(object: any): any {\n        return (\n            <DetailTable>\n                {Object.keys(object).map((key: any) => {\n                    switch (typeof object[key]) {\n                        case 'object':\n                            return <tr>{this.renderObjectTable(object[key])}</tr>\n                        default:\n                            return (\n                                <tr>\n                                    <th>{key}</th>\n                                    <td>{object[key]}</td>\n                                </tr>\n                            );\n                    };\n                })}\n            </DetailTable>\n        )\n    }\n\n    private renderRows() {\n        return this.props.data.map(file => {\n            return (\n                <TableBody>\n                    {this.renderFileNameRow(file.name)}\n                    {file.data.map((data) => this.renderFileDataRow(data))}\n                </TableBody>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <MainTable>\n                {this.renderHeaderRow()}\n                {this.renderRows()}\n            </MainTable>\n        );\n    }\n}\n","import * as React from 'react';\nimport { DataTypes } from \"../dataTypes\";\n\ninterface Props {\n    files: DataTypes.File[];\n    onFileRemove: (x: number) => void;\n}\n\nexport class FileList extends React.Component<Props> {\n\n    private renderFileRow(file: DataTypes.File) {\n        const onRemoveClick = () => this.props.onFileRemove(file.id);\n        return (\n            <tr>\n                <td>{file.name}</td>\n                <button onClick={onRemoveClick} children=\"X\" />\n            </tr>\n        );\n    }\n\n    render() {\n        return (\n            <table>\n                {this.props.files.map(x => this.renderFileRow(x))}\n            </table>\n        );\n    }\n}","import React, { Component } from 'react';\nimport Select from 'react-select';\nimport './App.css';\nimport { DataTypes } from './dataTypes';\nimport { FileUploader } from './File/FileUploader';\nimport styled from 'styled-components';\nimport { Table } from './Table/Table';\nimport { FileList } from './File/FileList';\nimport { ValueType } from 'react-select/lib/types';\n\nconst TableContainer = styled.div`\nwidth: 100%;\n`;\n\nconst Container = styled.div`\nwidth: 100%;\n`;\n\nconst Header = styled.header`\nz-index: 3;\nwidth: 100%;\n`;\n\ninterface Props { }\n\ninterface States {\n    currentID: number;\n    files: DataTypes.File[];\n    colsAvaliable: DataTypes.SelectOption[];\n    colsSelected: DataTypes.SelectOption[];\n}\n\nclass App extends Component<Props, States> {\n\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            currentID: 0,\n            files: [],\n            colsAvaliable: [],\n            colsSelected: [],\n        };\n    }\n\n    componentDidMount() {\n        // Add demo file\n        this.onFileReceive(this.defaultFiles);\n    }\n\n    defaultFiles: DataTypes.File = {\n        name: 'default',\n        id: 0,\n        data: [\n            { \"level\": \"info\", \"ts\": 1547306559.829222, \"caller\": \"AnalyseTrainingPharse/analyse_training_pharse.go:62\", \"msg\": \"Fetch questions success\", \"count\": 165, \"test\": null, \"test2\": [1, 2, 3, 999], \"test3\": undefined },\n            { \"level\": \"info\", \"ts\": 1547306565.250088, \"caller\": \"AnalyseTrainingPharse/analyse_training_pharse.go:74\", \"msg\": \"Match\", \"question\": { \"qid\": \"5c24d504d251974fc4534805\", \"index\": 2, \"trainingPhrase\": \"กองถ่ายขอเข้าถ่ายทำโมษณา กรรมการอนุมัติได้หรือไม่\", \"matched\": false, \"intent\": \"5c24d507d251974fc4534806\", \"retry\": 0 } },\n        ],\n    };\n\n    avaliableCols(files: DataTypes.File[]) {\n        const data = files.map(f => f.data).reduce((x, d) => x.concat(d), []);\n        const colSet = new Set<string>(data.map(d => Object.keys(d)).reduce((x, y) => x.concat(y), []));\n        const cols: DataTypes.SelectOption[] = [];\n        colSet.forEach(c => cols.push({ label: c, value: c }));\n        return cols;\n    }\n\n    onFileReceive(file: DataTypes.File) {\n        const currentID = this.state.currentID + 1;\n        const files = this.state.files.concat({ ...file, id: currentID });\n        this.setState({ files, currentID, colsAvaliable: this.avaliableCols([...this.state.files, file]) });\n    }\n\n    onFileRemove(id: number) {\n        const newFiles = this.state.files.filter(x => id !== x.id);\n        const newAvaCols = this.avaliableCols(newFiles);\n        const newSelCols = this.state.colsSelected.filter(x => newAvaCols.findIndex(y => y.value === x.value) > 0);\n        this.setState({ files: newFiles, colsAvaliable: newAvaCols, colsSelected: newSelCols });\n    }\n\n    onClearAll(e: React.FormEvent<HTMLButtonElement>) {\n        this.setState({ files: [], currentID: -1, colsAvaliable: [], colsSelected: [] });\n    }\n\n    onSelectColsChange(value: ValueType<DataTypes.SelectOption>) {\n        this.setState({ colsSelected: value as DataTypes.SelectOption[] });\n    }\n\n    render() {\n        return (\n            <Container>\n                <Header>\n                    <h1>Please Select file</h1>\n                    <FileUploader onAddFile={this.onFileReceive.bind(this)} />\n                    <Select options={this.state.colsAvaliable} value={this.state.colsSelected} onChange={this.onSelectColsChange.bind(this)} isSearchable={true} isMulti={true} />\n                    <FileList files={this.state.files} onFileRemove={this.onFileRemove.bind(this)} />\n                    <button onClick={this.onClearAll.bind(this)} children=\"Clear\" />\n                </Header>\n                <TableContainer>\n                    <Table data={this.state.files} displayColumn={this.state.colsSelected.map(x => x.value)} />\n                </TableContainer>\n            </Container>\n        );\n    }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}